# This workflow automatically merges a deployment pr when
# it has minimum reviews as set below, and required status checks
# have succeeded.
#
# This must NOT be set as required for the production branch
# otherwise it will block the automerge.
#
# Instead use the `Require "merge deployment" label`.
name: Deployment
permissions:
  contents: write
  pull-requests: write
on:
  pull_request:
    types:
      - labeled
    branches:
      - production
env:
  # Set min required reviews here.
  MIN_REVIEWS: 2
jobs:
  merge:
    name: Merge
    runs-on: ubuntu-latest
    if: |-
      ${{ 
        github.event.label.name == 'merge deployment' &&
        github.event.pull_request.state == 'open'
      }}
    steps:
      - # Check for mergeability
        if: ${{ github.event.pull_request.mergeable != true }}
        run: echo "PR is not yet mergeable" && exit 1

      # Prepare git
      - name: Checkout production branch
        uses: actions/checkout@v3
        with:
          ref: production
          # Fetch deeply in order to allow merge functionality.
          fetch-depth: 0
      - name: Set Github User to github-actions
        run: >
          git config --local user.email "github-actions[bot]@users.noreply.github.com" &&
          git config --local user.name "github-actions"
      - name: Fetch pr branch
        run: git fetch --no-tags --progress --no-recurse-submodules origin ${{ github.event.pull_request.head.ref }}

      # Merge
      - name: Merge PR into production
        run: git merge origin/${{ github.event.pull_request.head.ref }} --ff -m "Merge branch '${{ github.event.pull_request.head.ref }}' into production"

      # Push changes, this fails when required status checks are missing.
      # Retries 4 times to accomodate pending check runs.
      - name: Push changes
        run: >
          git push --set-upstream origin production ||
          (echo "Failed, will try again..." && sleep 10 && git push --set-upstream origin production) ||
          (echo "Failed, will try again..." && sleep 10 && git push --set-upstream origin production) ||
          (echo "Failed, will try again..." && sleep 10 && git push --set-upstream origin production) ||
          (echo "Failed, will try again..." && sleep 10 && git push --set-upstream origin production)
      # Close Pull Request
      - uses: peter-evans/close-pull@v2
        with:
          comment: "Merged ðŸš€"

      # If anythin fails, remove the `merge deployment` label
      - uses: actions-ecosystem/action-remove-labels@v1
        if: failure()
        with:
          labels: merge deployment
